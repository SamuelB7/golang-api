basePath: /api
definitions:
  controllers.AuthRequest:
    description: Authentication request with email and password
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  controllers.SignInRequest:
    description: Registration request with name, email, and password
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.PostCreateDTO:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  models.Posts:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - content
    - title
    - user_id
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      updated_at:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8080
info:
  contact:
    email: belo.samuel@gmail.com
    name: Samuel Belo
  description: A simple social media API
  termsOfService: http://swagger.io/terms/
  title: DevBook API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Get the health status of the application
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "503":
          description: Service Unavailable
      summary: Health Check
      tags:
      - Health-check
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns authentication token
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Login a user
      tags:
      - Authentication
  /posts:
    post:
      consumes:
      - application/json
      description: Create a new post with title and content
      parameters:
      - description: Post data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.PostCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Returns post_id and success message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new post
      tags:
      - Posts
  /posts-by-user:
    get:
      consumes:
      - application/json
      description: Get all posts created by the authenticated user with pagination
        and filtering
      parameters:
      - description: Number of posts to return (default 10)
        in: query
        name: limit
        type: integer
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Filter by title
        in: query
        name: title
        type: string
      - description: Filter by content
        in: query
        name: content
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of posts
          schema:
            items:
              $ref: '#/definitions/models.Posts'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all posts by user ID
      tags:
      - Posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a post
      tags:
      - Posts
    get:
      consumes:
      - application/json
      description: Get the details of a specific post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Post details
          schema:
            $ref: '#/definitions/models.Posts'
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a post by ID
      tags:
      - Posts
    put:
      consumes:
      - application/json
      description: Update a post with the provided fields
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Fields to update
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Updated post
          schema:
            $ref: '#/definitions/models.Posts'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a post
      tags:
      - Posts
  /sign-in:
    post:
      consumes:
      - application/json
      description: Creates a new user and returns a JWT token
      parameters:
      - description: Registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SignInRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully and returns authentication token
        "400":
          description: Bad request
        "409":
          description: User already exists
        "500":
          description: Internal server error
      summary: Register a new user
      tags:
      - Authentication
  /users:
    get:
      consumes:
      - application/json
      description: Get all users with pagination and filtering
      parameters:
      - description: Number of users to return (default 10)
        in: query
        name: limit
        type: integer
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user with name, email and password
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Returns user_id and success message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success message and deleted user ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get the details of a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update a user with the provided fields
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Fields to update
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Updated user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    description: Bearer JWT token authentication, type "Bearer {token}"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
